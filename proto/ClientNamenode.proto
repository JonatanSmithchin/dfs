syntax="proto3";

import "dfs.proto";

message GetBlockLocationsRequest{
	 string src = 1;
	 uint64 offset = 2;
	 uint64 length = 3;
}

message GetBlockLocationResponse{
	  LocatedBlocks location = 1;
}

message GetServerDefaultsRequest{
	//null
}

message GetServerDefaultsResponse{
	 ServerDefaults erverDefaults = 1;
}
//以下为文件系统操作的RPC接口信息
enum CreateFlag{
	CREATE = 0;
	OVERWRITE = 1;
	APPEND = 2;
}

message CreateRequest{
	 string src = 1;
	 string clientName = 2;
	 CreateFlag flag = 3;
	 Permission permission = 4;
	 bool createParent = 5;//是否在之上创建了父目录
	 uint64 blockSize = 6;
}

message CreateResponse{
	  FileStatus  status = 1;
}

message AppendRequest{
	 string src = 1;
	 string clientName = 2;
}

message AppendResponse{
	  LocatedBlock block = 1;
}

message RenameRequest{
	 string src = 1;
	 string dst = 2;
}

message RenameResponse{
	 bool result = 1;
}

message DeleteRequest{
	 string src = 1;
	 bool recursive = 2;//是否需要递归删除
}

message DeleteResponse{
	 bool result = 1;
}

message SetPermissionRequest{
	 string src = 1;
	 Permission permission = 2;
}

message SetPermissionRespose{
	//null
}

message SetOwnerRequest{
	 string src = 1;
	  string username = 2;
	  string groupname = 3;
}

message SetOwnerResponse{
	//null
}

message mkdirRequest{
	 string src = 1;
	 Permission permission = 2;
	 bool createParent = 3;//是否在之上创建了父目录
}

message mkdirResponse{
	 bool isSuccess = 1;
}

message GetListingrRequest{
	 string src = 1;
	 bytes startAfter = 2;
	 bool needLocation = 3;
}

message GetListingResponse{
	  DirectoryListing dirList = 1;
}

message RenewLeaseRequest{
	 string ClientName = 1;
}

message RenewLeaseResponse{
	//null
}
//以下为dfs管理操作的RPC接口信息

//定义RPC接口
service ClientService{
	//文件操作接口
	rpc GetBlockLocation(GetBlockLocationsRequest) returns (GetBlockLocationResponse);
	rpc GetServerDefaults(GetServerDefaultsRequest) returns (GetServerDefaultsResponse);
	rpc Create(CreateRequest) returns (CreateResponse);
	rpc Append(AppendRequest) returns (AppendResponse);
	rpc Rename(RenameRequest) returns (RenameResponse);
	rpc Delete(DeleteRequest) returns (DeleteResponse);
	rpc SetPermission(SetOwnerRequest) returns (SetOwnerResponse);
	rpc SetOwner(SetOwnerRequest) returns (SetOwnerResponse);
	rpc mkdir(mkdirRequest) returns (mkdirResponse);
	rpc Listing(GetListingrRequest) returns (GetListingResponse);
	rpc RenewLease(RenewLeaseRequest) returns (RenameResponse);
	//dfs管理接口
}