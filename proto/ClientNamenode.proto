syntax="proto3";

import "dfs.proto";

message GetBlockLocationsRequest{
	required string src = 1;
	required uint64 offset = 2;
	required uint64 length = 3;
}

message GetBlockLocationResponse{
	optional LocatedBlocks location = 1;
}

message GetServerDefaultsRequest{
	//null
}

message GetServerDefaultsResponse{
	required ServerDefaults erverDefaults = 1;
}
//以下为文件系统操作的RPC接口信息
enum CreateFlag{
	CREATE = 1;
	OVERWRITE = 2;
	APPEND = 3;
}

message CreateRequest{
	required string src = 1;
	required string clientName = 2;
	required CreateFlag flag = 3;
	required Permission permission = 4;
	required bool createParent = 5;//是否在之上创建了父目录
	required uint64 blockSize = 6;
}

message CreateResponse{
	optional FileStatus  status = 1;
}

message AppendRequest{
	required string src = 1;
	required string clientName = 2;
}

message AppendResponse{
	optional LocatedBlock block = 1;
}

message RenameRequest{
	required string src = 1;
	required string dst = 2;
}

message RenameResponse{
	required result = 1;
}

message DeleteRequest{
	required string src = 1;
	required bool recursive = 2;//是否需要递归删除
}

message DeleteResponse{
	required bool result = 1;
}

message SetPermissionRequest{
	required string src = 1;
	required Permission permission = 2;
}

message SetPermissionRespose{
	//null
}

message SetOwnerRequest{
	required string src = 1;
	optional string username = 2;
	optional string groupname = 3;
}

message SetOwnerResponse{
	//null
}

message mkdirRequest{
	required string src = 1;
	required Permission permission = 2;
	required bool createParent = 3;//是否在之上创建了父目录
}

message mkdirResponse{
	required bool isSuccess = 1;
}

message GetListingrRequest{
	required string src = 1;
	required bytes startAfter = 2;
	required bool needLocation = 3;
}

message GetListingResponse{
	optional DirestoryListing dirList = 1;
}

message RenewLeaseRequest{
	required string ClientName = 1;
}

message RenewLeaseResponse{
	//null
}
//以下为dfs管理操作的RPC接口信息

//定义RPC接口
service ClientService{
	//文件操作接口
	rpc GetBlockLocation(GetBlockLocationsRequest) returns (GetBlockLocationResponse);
	rpc GetServerDefaults(GetServerDefaultsRequest) returns (GetServerDefaultsResponse);
	rpc Create(CreateFileRequest) returns (CreateFileResponse);
	rpc Append(AppendRequest) returns (AppendResponse);
	rpc Rename(RenameRequest) returns (RenameResponse);
	rpc Delete(DeleteRequest) returns (DeleteResponse);
	rpc SetPermission(SetOwnerRequest) returns (SetOwnerResponse);
	rpc SetOwner(SetOwnerRequest) returns (SetOwnerResponse);
	rpc mkdir(mkdirRequest) returns (mkdirResponse);
	rpc Listing(GetListingrRequest) returns (GetListingResponse);
	rpc RenewLease(RenewLeaseRequest) returns (RenameResponse);
	//dfs管理接口
}